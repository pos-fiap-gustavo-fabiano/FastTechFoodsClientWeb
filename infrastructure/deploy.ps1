# Deploy FastTech Foods Frontend para Azure Container Apps
# Script PowerShell para Windows

param(
    [string]$ResourceGroup = "rg-fasttech-foods",
    [string]$AcrName = "fasttechregistry",
    [string]$ContainerAppName = "ca-fasttech-frontend",
    [string]$ImageTag = (Get-Date -Format "yyyyMMddHHmmss")
)

Write-Host "üöÄ Iniciando deploy manual..." -ForegroundColor Green
Write-Host "Resource Group: $ResourceGroup" -ForegroundColor Cyan
Write-Host "Container Registry: $AcrName" -ForegroundColor Cyan
Write-Host "Container App: $ContainerAppName" -ForegroundColor Cyan
Write-Host "Image Tag: $ImageTag" -ForegroundColor Cyan

# Verificar se est√° logado no Azure
try {
    $account = az account show --output json | ConvertFrom-Json
    Write-Host "‚úÖ Logado na subscription: $($account.id)" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Voc√™ n√£o est√° logado no Azure. Execute 'az login' primeiro." -ForegroundColor Red
    exit 1
}

# Verificar se o Docker est√° rodando
try {
    docker version | Out-Null
    Write-Host "‚úÖ Docker est√° funcionando" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker n√£o est√° rodando. Inicie o Docker Desktop primeiro." -ForegroundColor Red
    exit 1
}

# Fazer login no ACR
Write-Host "üîê Fazendo login no Container Registry..." -ForegroundColor Yellow
az acr login --name $AcrName

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Falha ao fazer login no ACR" -ForegroundColor Red
    exit 1
}

# Build e push da imagem
Write-Host "üê≥ Construindo e enviando imagem Docker..." -ForegroundColor Yellow
$imageWithTag = "$AcrName.azurecr.io/fasttech-frontend:$ImageTag"
$imageLatest = "$AcrName.azurecr.io/fasttech-frontend:latest"

docker build -t $imageWithTag .
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Falha no build da imagem" -ForegroundColor Red
    exit 1
}

docker tag $imageWithTag $imageLatest
docker push $imageWithTag
docker push $imageLatest

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Falha ao enviar imagem" -ForegroundColor Red
    exit 1
}

# Atualizar Container App
Write-Host "üì¶ Atualizando Container App..." -ForegroundColor Yellow

# Verificar se existe vari√°veis de ambiente
$viteOrderApi = $env:VITE_ORDER_API_BASE_URL
$viteMenuApi = $env:VITE_MENU_API_BASE_URL
$viteAuthApi = $env:VITE_AUTH_API_BASE_URL

if (-not $viteOrderApi) { $viteOrderApi = "https://api.fasttech.com" }
if (-not $viteMenuApi) { $viteMenuApi = "https://menu.fasttech.com" }
if (-not $viteAuthApi) { $viteAuthApi = "https://auth.fasttech.com" }

az containerapp update `
  --name $ContainerAppName `
  --resource-group $ResourceGroup `
  --image $imageWithTag `
  --set-env-vars `
    "VITE_ORDER_API_BASE_URL=$viteOrderApi" `
    "VITE_MENU_API_BASE_URL=$viteMenuApi" `
    "VITE_AUTH_API_BASE_URL=$viteAuthApi"

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Falha ao atualizar Container App" -ForegroundColor Red
    exit 1
}

# Obter URL da aplica√ß√£o
Write-Host "üîç Obtendo URL da aplica√ß√£o..." -ForegroundColor Yellow
$appUrl = az containerapp show --name $ContainerAppName --resource-group $ResourceGroup --query properties.configuration.ingress.fqdn -o tsv
$fullUrl = "https://$appUrl"

Write-Host "‚úÖ Deploy conclu√≠do com sucesso!" -ForegroundColor Green
Write-Host "üåê Aplica√ß√£o dispon√≠vel em: $fullUrl" -ForegroundColor Cyan

# Health check simples
Write-Host "üîç Fazendo health check..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

try {
    $response = Invoke-WebRequest -Uri $fullUrl -Method GET -TimeoutSec 30 -UseBasicParsing
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Health check passou! Aplica√ß√£o est√° funcionando." -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Health check retornou status: $($response.StatusCode)" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ö†Ô∏è  Health check falhou. Verifique os logs da aplica√ß√£o." -ForegroundColor Yellow
    Write-Host "üí° Execute: az containerapp logs show --name $ContainerAppName --resource-group $ResourceGroup --follow" -ForegroundColor Cyan
}

Write-Host "`nüéâ Deploy finalizado!" -ForegroundColor Green
Write-Host "üì± Acesse: $fullUrl" -ForegroundColor Cyan
