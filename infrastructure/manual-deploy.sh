#!/bin/bash

# Script para deploy manual da aplica√ß√£o
# √ötil para testes ou deploys de emerg√™ncia

set -e

# Carregar vari√°veis de ambiente
if [ -f .env ]; then
    export $(cat .env | xargs)
fi

# Vari√°veis
RESOURCE_GROUP="${RESOURCE_GROUP:-rg-fasttech-foods}"
ACR_NAME="${ACR_NAME:-fasttechregistry}"
CONTAINER_APP_NAME="${CONTAINER_APP_NAME:-ca-fasttech-frontend}"
IMAGE_TAG="${IMAGE_TAG:-$(date +%s)}"

echo "üöÄ Iniciando deploy manual..."
echo "Resource Group: $RESOURCE_GROUP"
echo "Container Registry: $ACR_NAME"
echo "Container App: $CONTAINER_APP_NAME"
echo "Image Tag: $IMAGE_TAG"

# Verificar se est√° logado no Azure
if ! az account show &> /dev/null; then
    echo "‚ùå Voc√™ n√£o est√° logado no Azure. Execute 'az login' primeiro."
    exit 1
fi

# Fazer login no ACR
echo "üîê Fazendo login no Container Registry..."
az acr login --name $ACR_NAME

# Build e push da imagem
echo "üê≥ Construindo e enviando imagem Docker..."
docker build -t $ACR_NAME.azurecr.io/fasttech-frontend:$IMAGE_TAG .
docker tag $ACR_NAME.azurecr.io/fasttech-frontend:$IMAGE_TAG $ACR_NAME.azurecr.io/fasttech-frontend:latest
docker push $ACR_NAME.azurecr.io/fasttech-frontend:$IMAGE_TAG
docker push $ACR_NAME.azurecr.io/fasttech-frontend:latest

# Atualizar Container App
echo "üì¶ Atualizando Container App..."
az containerapp update \
  --name $CONTAINER_APP_NAME \
  --resource-group $RESOURCE_GROUP \
  --image $ACR_NAME.azurecr.io/fasttech-frontend:$IMAGE_TAG

# Obter URL da aplica√ß√£o
APP_URL=$(az containerapp show --name $CONTAINER_APP_NAME --resource-group $RESOURCE_GROUP --query properties.configuration.ingress.fqdn -o tsv)

echo "‚úÖ Deploy conclu√≠do com sucesso!"
echo "üåê Aplica√ß√£o dispon√≠vel em: https://$APP_URL"

# Health check simples
echo "üîç Fazendo health check..."
sleep 30
if curl -f "https://$APP_URL" > /dev/null 2>&1; then
    echo "‚úÖ Health check passou! Aplica√ß√£o est√° funcionando."
else
    echo "‚ö†Ô∏è  Health check falhou. Verifique os logs da aplica√ß√£o."
fi
