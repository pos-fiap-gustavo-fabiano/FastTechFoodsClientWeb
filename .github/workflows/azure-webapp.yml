name: Deploy to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'fasttech-frontend-webapp-client'
  NODE_VERSION: '22.x'
  VITE_AUTH_API_BASE_URL: 'https://apim-hackathon-fiap.azure-api.net/identity'
  VITE_MENU_API_BASE_URL: 'https://apim-hackathon-fiap.azure-api.net/menu'
  VITE_ORDER_API_BASE_URL: 'https://apim-hackathon-fiap.azure-api.net/orders'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --force

    - name: Build application
      run: npm run build
      env:
        VITE_ORDER_API_BASE_URL: ${{ env.VITE_ORDER_API_BASE_URL }}
        VITE_MENU_API_BASE_URL: ${{ env.VITE_MENU_API_BASE_URL }}
        VITE_AUTH_API_BASE_URL: ${{ env.VITE_AUTH_API_BASE_URL }}

    - name: 'Prepare for static hosting'
      run: |
        cd dist
        cat > package.json << EOF
        {
          "name": "fasttech-frontend",
          "version": "1.0.0",
          "scripts": {
            "start": "node server.js"
          },
          "dependencies": {
            "express": "^4.18.2"
          }
        }
        EOF
        
        cat > server.js << EOF
        const express = require('express');
        const path = require('path');
        const app = express();
        const port = process.env.PORT || 8080;

        // Serve static files
        app.use(express.static('.'));

        // Handle SPA routing
        app.get('*', (req, res) => {
          res.sendFile(path.join(__dirname, 'index.html'));
        });

        app.listen(port, () => {
          console.log(\`Server running on port \${port}\`);
        });
        EOF
        
        # Install dependencies
        npm install --production

    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: './dist'
